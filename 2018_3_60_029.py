# -*- coding: utf-8 -*-
"""2018-3-60-029.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XPMtXmEJ_8PZcnHq2Zi_exqlqVXEKvli
"""

import math

with open("/content/sample_data/documents.txt", "r") as f:
    documents = f.readlines()
documents = [doc.strip() for doc in documents]

vocabulary = list(set([word.lower() for doc in documents for word in doc.split()]))

doc_freq = [0] * len(vocabulary)
for i, word in enumerate(vocabulary):
    for doc in documents:
        if word in doc.lower():
            doc_freq[i] += 1

tf_idf_vectors = []
for doc in documents:
    tf_idf_vector = []
    word_freq = [0] * len(vocabulary)
    for i, word in enumerate(vocabulary):
        word_freq[i] = doc.lower().count(word)
    for i, word in enumerate(vocabulary):
        tf = word_freq[i] / len(doc.split())
        idf = math.log(len(documents) / doc_freq[i])
        tf_idf = tf * idf
        tf_idf_vector.append(tf_idf)
    tf_idf_vectors.append(tf_idf_vector)

print(vocabulary)

for i, doc in enumerate(documents):
    print(f"TF-IDF vector for Document {i + 1}:")
    for j, word in enumerate(vocabulary):
        print(f"{word}: {tf_idf_vectors[i][j]}")